@page
@model TicketPlace2._0.Areas.Admin.Pages.Statistique.Detail
@{
    ViewData["Title"] = "Statistiques des ventes";
}

<h1>Statistiques des ventes pour l'événement @Model.PlaceVendueModel.FirstOrDefault()?.Evenement?.Nom</h1>

<canvas id="salesChart" width="400" height="200"></canvas>
<canvas id="priceChart" width="400" height="200"></canvas>

@section Scripts {
    <script src="~/js/chart.js"></script>
    <script>
        var ctx = document.getElementById('salesChart').getContext('2d');
        var salesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.SalesStatistics.Keys)),
                datasets: [{
                    label: 'Ventes par type de place',
                    data: @Html.Raw(Json.Serialize(Model.SalesStatistics.Values)),
                    backgroundColor: 'rgba(75, 192, 192, 0.2)',
                    borderColor: 'rgba(75, 192, 192, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
    <script>
        var ctx = document.getElementById('priceChart').getContext('2d');
        var priceChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.PriceStatistics.Keys)),
                datasets: [{
                    label: 'Prix par type de place',
                    data: @Html.Raw(Json.Serialize(Model.PriceStatistics.Values)),
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                }
            }
        });
    </script>
}